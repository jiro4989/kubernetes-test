version: '3'

vars:
  NAMESPACE: local
  HELM_VERSION: v3.5.0

tasks:
  setup:
    desc: "必要な外部コマンドをインストールする"
    cmds:
      - task: install:helm

  install:helm:
    desc: "helmをインストールする"
    dir: /usr/local/src
    cmds:
      - sudo install -m 0755 -o $USER -g $USER -d helm/{{.HELM_VERSION}}
      - |
        set -eu

        cd helm/{{.HELM_VERSION}}
        wget https://get.helm.sh/helm-{{.HELM_VERSION}}-linux-amd64.tar.gz
        tar xzf helm-{{.HELM_VERSION}}-linux-amd64.tar.gz
        chmod +x linux-amd64/helm
        sudo ln -sfn $PWD/linux-amd64/helm /usr/local/bin/helm
    status:
      - which helm

  build:all:
    desc: "必要なすべてのコンテナのイメージをビルドする"
    cmds:
      - task: build:app
      - task: build:internal-api

  build:app:
    desc: "appコンテナのイメージをビルドする"
    dir: app
    cmds:
      - docker build -t app .

  build:internal-api:
    desc: "internal-apiコンテナのイメージをビルドする"
    dir: internal-api
    cmds:
      - docker build -t internal-api .

  k8s:create:namespace:
    desc: "名前空間を作成する"
    dir: manifest
    cmds:
      - kubectl create namespace {{.NAMESPACE}}
    status:
      - kubectl get namespace {{.NAMESPACE}}

  k8s:delete:namespace:
    desc: "名前空間を削除する"
    dir: manifest
    cmds:
      - kubectl delete namespace {{.NAMESPACE}}

  k8s:apply:
    desc: "マニフェストファイルをKubernetesクラスタに適用する"
    cmds:
      - helm install local-test ./k8s
      - sleep 3
      - task: k8s:get:all

  k8s:clear:
    desc: "作成したリソースを削除する"
    cmds:
      - task: k8s:delete:namespace
      - task: k8s:get:all

  k8s:get:all:
    desc: "名前空間配下のすべてのリソースを表示する"
    cmds:
      - kubectl get all -n {{.NAMESPACE}}

  run:
    desc: "appコンテナをビルドしてKubernetesクラスタに適用する"
    cmds:
      - task: build:all
      - task: k8s:create:namespace
      - task: k8s:apply

  check:
    desc: "Podsとの疎通確認を行う"
    cmds:
      - kubectl get pods -n {{.NAMESPACE}}
      - curl http://localhost:30001
